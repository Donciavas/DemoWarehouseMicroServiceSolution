{
  "Routes": [
    // Authentication Web API
    {
<<<<<<< HEAD
      "UpstreamPathTemplate": "/api/Account/Login",
      "UpstreamHttpMethod": [ "Post" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "authenticationwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Account/Login"
    },
    // Authentication Web API for Back-End testing
    {
=======
>>>>>>> 68bc333f127a027f9a4cf4a25ef82e7b064597f2
      "UpstreamPathTemplate": "/api/Account",
      "UpstreamHttpMethod": [ "Post" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "authenticationwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Account"
    },
    // Customer Web API
    {
      "UpstreamPathTemplate": "/api/Customer",
      "UpstreamHttpMethod": [ "Get", "Post", "Put" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "customerwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Customer",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      }
    },
    {
      "UpstreamPathTemplate": "/api/Customer/{customerId}",
      "UpstreamHttpMethod": [ "Get", "Delete" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "customerwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Customer/{customerId}",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      }
    },
    //Product Web API
    {
      "UpstreamPathTemplate": "/api/Product",
      "UpstreamHttpMethod": [ "Get", "Post", "Put" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "productwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Product",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      }
    },
    {
      "UpstreamPathTemplate": "/api/Product/{productId}",
      "UpstreamHttpMethod": [ "Get", "Delete" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "productwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Product/{productId}",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      }
    },
    // Order Web API
    {
      "UpstreamPathTemplate": "/api/Order",
      "UpstreamHttpMethod": [ "Get", "Post", "Put" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Order",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      },
      "RateLimitOptions": {
        "ClientWhitelist": [],
        "EnableRateLimiting": true,
        "Period": "60s",
        "PeriodTimespan": 60,
        "Limit": 3
      }
    },
    {
      "UpstreamPathTemplate": "/api/Order/{orderId}",
      "UpstreamHttpMethod": [ "Get", "Delete" ],
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "orderwebapi",
          "Port": 80
        }
      ],
      "DownstreamPathTemplate": "/api/Order/{orderId}",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "Bearer",
        "AllowedScopes": []
      },
      "RouteClaimsRequirement": {
        "Role": "Administrator"
      }
    }
  ],
  "GlobalConfiguration": {
    "BaseUrl": "http://localhost:8001",
    "RateLimitOptions": {
      "QuotaExceededMessage": "Request have exceeded maximum of 3 successful attempts per 60s time limit. Not allowed",
      "HttpStatusCode": 909
    }
  }
}
